## 1. 리액트 시작

### 왜 리액트인가?

자바스크립트 라이브러리로 사용자 인터페이스를 만드는데 사용.

오직 view만 신경 쓰는 라이브러리

##### 컴포넌트 

특정 부분이 어떻게 생길지 정하는 선언체로 재사용 가능한 API로 수많은 기능들을 내장하고 있으며 컴포넌트 하나에서 해당 컴포넌트의 생김새와 작동 방식을 정의함

##### 렌더링 : 사용자 화면에 뷰를 보여 주는 것

render() : 컴포넌트가 어떻게 생겼는지 정의하는 선언체

- 초기 렌더링

  뷰의 구조와 작동에 관한 정보를 지닌 객체 반환 -> HTML 마크업 생성 -> DOM 요소 안에 주입

- 조화 과정

  뷰 업데이트 -> render() -> 이전의 render 함수가 만들었던 컴포넌트와 현재 render() 컴포넌트 정보 비교해 최소한의 연산으로 DOM 트리 연산

### 리액트의 특징

#####  1. Virtual Dom

> DOM(Document Object Model) : 객체를 문서 구조를 표현하는 방법으로 xml, html로 작성.
>
> * 동적 UI에 최적화되어 있지 않아 자바스크립트를 사용해 동적으로 만들 수 있음.
>
> * DOM 자체는 속도가 빠르나, 웹 브라우저 단에서 DOM 변화가 일어나면 CSS 연산, 레이아웃 구성, 페이지 리페인트 하는 과정에서 시간이 허비됨.
>
> * DOM 을 조작할 때마다 웹페이지를 새로 그리기 때문에 성능 저하 발생 가능 => DOM 최소한 처리
>
>   => 리액트는 Virtual DOM 방식을 사용해 DOM 업데이트를 추상화함으로써 DOM 처리 횟수를 최소화 및 효율적

* 실제 DOM에 접근하여 조작하는 대신, 이를 추상화한 자바스크립트 객체를 구성하여 사용함
* 동작과정
  1. 데이터 업데이트하면 전체 UI 를 Virtual DOM에 리렌더링
  2. 이전 Virtual DOM에 있던 내용과 현재 내용을 비교
  3. 바뀐 부분만 실제 DOM에 적용함.

###### 리액트와 Virtual DOM은 UI 업데이트 과정의 복잡함을 해소해 업데이트 처리 간결성에 큰 장점을 가짐.

##### 2. 기타 특징

- 리액트는 뷰만 담당하는 라이브러리이므로 기타 기능은 직접 구현 필요
- 라우팅 : 리액트 라우터, Ajax : axios, fetch, 상태 관리 : 리덕스, MobX 등 사용 가능함.



> ##### Yarn
>
> - JavaScrip 패키지 매니저로 페이스북에서 개발
>
> - 장점
>
>   1. 빠르다
>
>      다운로드한 모드 패키지를 캐시하므로 다시 다운로드 불필요.
>
>      병렬화 운영을 통한 리소스 활용률을 극대화해 설치 시간 단축
>
>   2. 보안
>
>      checkSum을 사용하여 코드가 실행되기 전에 설치된 패키지의 무결성 검사 진행
>
>   3. 신뢰성
>
>      설치용 결정 알고리즘을 사용하여 한 시스템에서 작동하는 설치가 다른 시승템에서 정확히 동일한 방식으로 작동하도록 보장 가능
>
>      
>
>      https://blog.naver.com/choseyoung45/221535758420
